**Develop an IoT system to monitor CO gas. Upload data to ThingSpeak Cloud for efficient storage. Implement Machine Learning to predict RH based on CO levels.**

# Import necessary libraries import pandas as pd
from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error import matplotlib.pyplot as plt

# Load the AirQuality dataset (replace 'your_dataset.csv' with the actual file name)
# Assuming the dataset has a header row data = pd.read_csv('your_dataset.csv')

# Select features and target variable features = ['CO(GT)']
target = 'RH'

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(data[features], data[target], test_size=0.2, random_state=42)

# Decision Tree Regression decision_tree_model = DecisionTreeRegressor()
 
decision_tree_model.fit(X_train, y_train) decision_tree_predictions = decision_tree_model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, decision_tree_predictions) print("Decision Tree Regression Mean Squared Error:", mse)

# Plot the results
plt.scatter(X_test, y_test, color='black', label='Actual data') plt.scatter(X_test, decision_tree_predictions, color='red', label='Decision Tree Predictions')
plt.xlabel('CO(GT)')
plt.ylabel('RH') plt.legend() plt.show()
